#!/bin/bash -e

ROOT=$(dirname $0)/..
cd $ROOT

if [ -z "$1" ]; then
    echo $0 [mode]
fi
mode=$1
shift

#############################################################

function add_br {
    bname=$1
    dpid=$(printf %016x $2)
    port=$3
    sudo ovs-vsctl --if-exists del-br $bname \
         -- add-br $bname \
         -- set-fail-mode $bname secure \
         -- set bridge $bname other_config:datapath-id=$dpid

    if [ -n "$port" ]; then
        sudo ovs-vsctl set-controller $bname tcp:127.0.0.1:$port
    fi

    echo Added $bname 0x$dpid on $port
}

function add_link {
    br_a=$1
    pt_a=$2
    br_b=$3
    pt_b=$4

    iface_a=$br_a-eth$pt_a
    iface_b=$br_b-eth$pt_b

    sudo ip link del $iface_a || true
    sudo ip link del $iface_b || true
    sudo ip link add $iface_a type veth peer name $iface_b
    sudo ifconfig $iface_a up
    sudo ifconfig $iface_b up
    sudo ovs-vsctl add-port $br_a $iface_a -- set interface $iface_a ofport_request=$pt_a
    sudo ovs-vsctl add-port $br_b $iface_b -- set interface $iface_b ofport_request=$pt_b || true
    echo Added $iface_a linked $iface_b
}

function add_iface {
    br=$1
    pt=$2
    iface=$3
    sudo ovs-vsctl add-port $br $iface -- set interface $iface ofport_request=$pt
}

function add_oeth {
    br_a=$1
    pt_a=$2
    iface_a=$br_a-eth$pt_a
    iface_b=$3

    sudo ip link del $iface_a || true
    sudo ip link del $iface_b || true
    sudo ip link add $iface_a type veth peer name $iface_b
    sudo ifconfig $iface_a up
    sudo ovs-vsctl add-port $br_a $iface_a -- set interface $iface_a ofport_request=$pt_a
    echo Added $iface_a linked to $iface_b
}

###########################################################

sudo rm -rf inst/faucet
sudo mkdir -p inst/faucet/corp-agg
sudo chown $USER -R inst/faucet
sudo modprobe bonding

echo Configuring mode $mode...
cp misc/corp_$mode.yaml inst/faucet/corp-agg/faucet.yaml
cp -a topology/zz-$mode/* inst/faucet/

docker kill nz-kiwi-ctr1 || true
docker kill nz-kiwi-ctr2 || true
docker kill corp-agg || true

cmd/faux 1 xdhcp
cmd/faux 2 xdhcp
cmd/faux 3 xdhcp

docker exec -ti daq-faux-1 ip addr flush faux-eth0
docker exec -ti daq-faux-1 ifconfig faux-eth0 192.168.0.1/16
docker exec -ti daq-faux-2 ip addr flush faux-eth0
docker exec -ti daq-faux-2 ifconfig faux-eth0 192.168.0.2/16
docker exec -ti daq-faux-3 ip addr flush faux-eth0
docker exec -ti daq-faux-3 ifconfig faux-eth0 192.168.0.3/16

cmd/faucet nz-kiwi-ctr1 6663
cmd/faucet nz-kiwi-ctr2 6673
cmd/faucet corp-agg 6683

add_br t1sw1 177 6663 # 0x510 6653
add_br t2sw1 2352 6663 # 0x0b1 6653
add_br t1sw2 178 6673 # 0x930 6663
add_br t2sw2 1296 6673 # 0x0b2 6663
add_br corp  0x111 6683

add_oeth t1sw1 28 corp-eth10
add_oeth t1sw1 29 corp-eth11

add_link t1sw1 7 t2sw1 49
add_link t1sw1 8 t2sw2 49

add_oeth t1sw2 28 corp-eth20
add_oeth t1sw2 29 corp-eth21

add_link t1sw2 7 t2sw1 50
add_link t1sw2 8 t2sw2 50

sudo ip link del bond1 || true
if [ $mode == bond ]; then
    sudo ip link add bond1 type bond mode 802.3ad
    sudo ip link set bond1 up
    sudo ip link set corp-eth10 master bond1
    sudo ip link set corp-eth11 master bond1
    upstream1=bond1
else
    upstream1=corp-eth10
fi
sudo ip link set up dev corp-eth10
sudo ip link set up dev corp-eth11
sudo ovs-vsctl add-port corp $upstream1 -- set interface $upstream1 ofport_request=10

sudo ip link del bond2 || true
if [ $mode == bond ]; then
    sudo ip link add bond2 type bond mode 802.3ad
    sudo ip link set bond2 up
    sudo ip link set corp-eth20 master bond2
    sudo ip link set corp-eth21 master bond2
    upstream2=bond2
else
    upstream2=corp-eth20
fi
sudo ip link set up dev corp-eth20
sudo ip link set up dev corp-eth21
sudo ovs-vsctl add-port corp $upstream2 -- set interface $upstream2 ofport_request=20

add_iface t2sw1 10 faux-1
add_iface t2sw2 10 faux-2
add_iface corp 1 faux-3

echo Starting connection warm-up for 30s...
docker exec daq-faux-1 ping -q -c 30 192.168.0.2 &
docker exec daq-faux-2 ping -q -c 30 192.168.0.3 &
docker exec daq-faux-3 ping -q -c 30 192.168.0.1 &

echo Waiting for warm-ups to complete...
wait

echo Performing connectivity checks...
docker exec daq-faux-1 ping -q -c 1 192.168.0.2
docker exec daq-faux-2 ping -q -c 1 192.168.0.3
docker exec daq-faux-3 ping -q -c 1 192.168.0.1

echo Done with stack setup mode $mode.
