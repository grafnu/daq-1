#!/bin/bash -e
#
# Setup things for directly running the core system. Not required for just
# running a downloaded container.
#
# If you just want to get up and go, see bin/setup_base.
#

ROOT=$(dirname $0)/..
cd $ROOT

FAUCETR=${DAQ_FAUCET_REPO:-https://github.com/faucetsdn/faucet}
FAUCETB=${DAQ_FAUCET_BRANCH}
FAUCETV=$(cat misc/FAUCET_VERSION)
MININET=https://github.com/mininet/mininet
MININETV=2.3.0d3

if [ -z "$AG" ]; then
    AG="sudo apt-get -qqy --no-install-recommends"
fi

if [ -z "$PIP" ]; then
    PIP="python3 -m pip"
fi

echo AG is $AG
echo PIP is $PIP
echo Setup root is $PWD

if [ "$DAQ_BUILD" == "no" ]; then
    echo Skipping core setup because DAQ_BUILD=no
    exit 0
fi

echo $AG update
$AG update

echo $AG install
$AG install lsb-release
release=$(lsb_release -cs)
echo LSB release version $release

$AG install \
    software-properties-common apt-transport-https iproute2 \
    git ethtool curl apache2-utils iputils-ping lsof \
    ca-certificates sudo net-tools tcpdump build-essential \
    isc-dhcp-client network-manager netcat gnupg2 strace \
    python3 python3-pkg-resources python3-setuptools python3-dev \
    python3-pip openjdk-8-jdk python emacs-nox python3-venv

# Fix permissions in case they have wandered...
test -f venv && sudo chown `stat . -c %u:%g` -R venv/

python3 -m venv venv

# Can't use venv inside of containers because of absolute paths.
if [ -z "$DAQ_CONTAINER" ]; then
    source venv/bin/activate
else
    echo Running in container $DAQ_CONTAINER
fi

echo Installing python dependencies...
$PIP install wheel
$PIP install --index-url=https://pypi.python.org/simple pylint \
    netifaces pyyaml codecov firebase-admin==2.11.0 google-cloud-pubsub==0.32.1

find $HOME -name firebase_admin
find $HOME -name coverage

if [ -d mininet ]; then
    echo Checking mininet version matches $MININETV...
    targetrev=$(cd mininet; git rev-parse $MININETV)
    instrev=$(cd mininet; git rev-parse HEAD)
    if [ "$targetrev" != "$instrev" ]; then
        echo Target mininet version $MININETV does not match installed version.
        false
    fi
else
    echo Cloning $MININET $MININETV...
    git clone $MININET
    (
        cd mininet
        git reset --hard $MININETV
        for i in ssh pep8 pyflakes python-pexpect pylint xterm ; do
            perl -pi -e "s/${i}//g" util/install.sh ;
        done
        util/install.sh -n
    )
fi

echo Resetting .cache directory permissions...
sudo chown $USER -R $HOME/.cache

if [ -d faucet ]; then
    echo faucet already installed, skipping.
elif [ -z "$FAUCETV" ]; then
    echo No faucet version found, skipping.
else
    echo Cloning $FAUCETR...
    git clone -n $FAUCETR faucet
    if [ -n "$FAUCETB" ]; then
        echo Switching to branch $FAUCETB...
        (cd faucet; git checkout $FAUCETB --)
        (cd faucet; git rev-list -n 1 HEAD) > misc/FAUCET_VERSION
        echo Updated FAUCET_VERSION to $(cat misc/FAUCET_VERSION)
    else
        echo Forcing faucet commit $FAUCETV
        (cd faucet; git reset --hard $FAUCETV)
    fi
fi
