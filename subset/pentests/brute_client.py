import socket, sys, json

user_data=open('user_list.json')
user_list = json.load(user_data)
user_data.close()

#username=['root','admin','manager']
username= user_list['username'].split(",")

#password=['root','pass','friend']
password= user_list['password'].split(",")

arguments = sys.argv

print 'brute_client test begin'
print 'address:' + arguments[1]
print 'port:' + arguments[2]
print 'reportFile:' + arguments[3]

#address = '127.0.0.1'
address = str(arguments[1])

#port = 10000
port = int(arguments[2])

report_file = str(arguments[3])
data_length =64

expected=['login:','Password:','Last login:','Login incorrect','Connection closed by foreign host.']
expected1=['username:','password:','success','login failed','Connection closed by foreign host.']

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_address = (address,port)

sock.connect(server_address)

login_report='\n'
u=0
p=0

def _write_report():
    file = open(report_file, "w")
    file.write(login_report)

try:
    while True:
        data = sock.recv(data_length)
        if data:
            print data
            if data == expected[2]:
                #success statement
                login_report = login_report + 'Username:' + username[u-1] + '\n'
                login_report = login_report + 'Password:' + password[p-1] + '\n'
                _write_report()
                sock.close()
                break
            elif data[-6:] == expected[0]:
                #username request
                sock.sendall(username[u])
                u+=1
                if len(username) < u:
                    login_report = login_report + 'Failed at username\n'
                    _write_report()
                    break
            elif data == expected[1]:
                #password request
                sock.sendall(password[p])
                p+=1
                if len(password) < p:
                    login_report = login_report + 'Failed at password\n'
                    _write_report()
                    break
            elif data == expected[4]:
                #connection closed after 3 tries statement
                login_report = login_report + data
                _write_report()
                break
finally:
    sock.close()
