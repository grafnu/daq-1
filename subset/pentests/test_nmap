#!/bin/bash -e
source reporting.sh
#source ../../utils/reporting.sh

REPORT=/tmp/report.txt
CONFIG=/config/device/module_config.json
#CONFIG=../../qualification/device_type_module_config.json
cat $CONFIG
LOG=/tmp/nmap.log
OPENPORTSLIST=""
SUMMARYTABLE=""

TEST_NAME="security.ports.nmap"
TEST_DESCRIPTION="Automatic TCP/UDP port scan using nmap"
SUMMARY=""
REDACTED_LOG=/tmp/nmap.report.log

if [ -f $CONFIG ]; then
    echo Extracting servers config from $CONFIG
    jq .servers $CONFIG
else
    echo No module config $CONFIG
fi

ping -n -c 3 $TARGET_IP

echo Testing target $TARGET_IP port 23 \(telnet\)
nc -nzv $TARGET_IP -w 5 23 || true
nc -nzv $TARGET_IP -w 5 23 || true
sleep 1
nc -nzv $TARGET_IP -w 5 23 || true
sleep 1

# get list of ports to be scanned from module_config.json
ports="U:0,"
for k in $(jq '.servers.udp.ports | keys | .[]' $CONFIG); do
	echo $k
        ports=$ports$k","
done
ports=$ports"T:0,"
for k in $(jq '.servers.tcp.ports | keys | .[]' $CONFIG); do
        echo $k
        ports=$ports$k","
done
portslist=$(echo $ports | sed 's/"//g')

echo Testing target $TARGET_IP to check open ports $portslist
nmap -v -n -Pn -T5 -sU -sT --open -p$portslist -oG $LOG $TARGET_IP
cat $LOG

touch $REDACTED_LOG
touch $REPORT
rm -f .fail
grep -oh '[0-9]*/open[^[:space:]]*' $LOG | while IFS=/ read -ra parts; do
    state=${parts[1]}
    if [ "$state" == open ] || [ "$state" == "open|filtered" ]; then
        if [ -f $CONFIG ]; then
            port=${parts[0]}
            proto=${parts[2]}
            allowed=$(jq ".servers.$proto.ports.\"$port\".allowed" $CONFIG)
            if [ "$allowed" != true ]; then
                echo Failing ${parts[*]} | tee -a $REDACTED_LOG
                OPENPORTSLIST=$OPENPORTSLIST","${parts[*]}
                touch .fail
            else
                echo Allowing ${parts[*]} | tee -a $REDACTED_LOG
            fi
        else
            echo Open port ${parts[*]} | tee -a $REDACTED_LOG
            touch .fail
        fi
    fi
done

if [ -f .fail ]; then
    echo Open ports:
    cat $REDACTED_LOG
    result=fail
    SUMMARY="Some disallowed ports are open:"$OPENPORTSLIST
else
    echo No invalid ports found. | tee -a $REDACTED_LOG
    result=pass
    SUMMARY="Only allowed ports found open."
fi

RESULT_AND_SUMMARY="RESULT $result $TEST_NAME $SUMMARY"

write_out_result $REPORT \
                 "$TEST_NAME" \
                 "$TEST_DESCRIPTION" \
                 "$(cat $REDACTED_LOG)" \
                 "$RESULT_AND_SUMMARY"

[ "$result" == pass ]
