#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
INSTDIR=$ROOT/inst/
INSTLOCK=$INSTDIR/startup.lock
LOCALDIR=$ROOT/local/
MISCDIR=$ROOT/misc/
IMAGE=daqf/runner
SYSTEM_CONF=system.conf
LOCAL_CONFIG=$LOCALDIR/$SYSTEM_CONF
DOCKER_STARTUP_TIMEOUT_MS=60000
VERSION=$(cat $ROOT/misc/RELEASE_VERSION)
pull_docker=y
docker_args=
build=
reuse=
move_intfs=
run_args="$@"

cd $ROOT
source misc/config_base.sh

if [ "$run_mode" == latest ]; then
    pull_docker=n
    VERSION=latest
fi

if [ "$run_mode" == reuse ]; then
    reuse=y
fi

if [ "$run_mode" == base -o "$run_mode" == rebuild ]; then
    if [ "$run_mode" == base ]; then
        IMAGE=daq/base
        VERSION=latest
    fi
    build=y
    pull_docker=n
    docker_args+=" -v $PWD:/daq/"
fi

if [ "$run_mode" == local ]; then
    pull_docker=n
    echo Mapping local daq into runner process.
    docker_args+=" -v $PWD:/root/daq"
fi

if [ "$run_cmd" == bash ]; then
    docker_args+=" -ti"
fi

docker_args+="\
  --env MININET_LOGLEVEL=$MININET_LOGLEVEL\
  --env DOCKER_STARTUP_TIMEOUT_MS=$DOCKER_STARTUP_TIMEOUT_MS \
  --env DAQ_LOGLEVEL=$DAQ_LOGLEVEL"

mkdir -p $INSTDIR

if [ -z "$reuse" ]; then
   sudo docker rm -f daq-runner > /dev/null 2>&1 || true
fi

if [ $IMAGE == daqf/runner ]; then
    echo
    echo You should not be here. Running in a container is not currently supported.
    echo Take a few steps back, and try again. Sorry.
    echo
    false
fi

TARGET=$IMAGE:$VERSION

docker_args+=" --env DAQ_CONTAINER=$IMAGE"
if [ -z "$build" ]; then
    docker_args+=" -v $INSTDIR:/root/daq/inst"
    docker_args+=" -v $LOCALDIR:/root/daq/local"
    docker_args+=" -v $MISCDIR:/root/daq/misc"
    move_intfs=y
fi

if [ "$pull_docker" == y ]; then
    sudo docker pull $TARGET
    docker images --format '{{.Repository}} {{.Tag}} {{.ID}}' | while read repo tag id; do
        if [ $repo == $IMAGE -a $tag != $VERSION ]; then
            echo Purging previously downloaded image $repo:$tag
            docker rmi $id
        fi
    done
fi

function move_intf {
    base=$1
    intf=${base%!}
    echo moving intf $base into container...
    if [ -n "$base" -a "$base" == "$intf" ]; then
        link=$(ip link show $intf 2>/dev/null) || true
        if [ -z "$link" ]; then
            echo Could not find interface $intf
            false
        fi
        if [ "$pid" != 0 ]; then
            echo Moving interface $intf into container pid $pid...
            sudo ip link set $intf netns $pid
        fi
    fi
}

# This is necessary to work around a problem with docker permissions.
echo Configuring apparmor...
sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.tcpdump || true
hash -r

if [ -n "$reuse" ]; then
    echo Running in already existing daq-runner container...
    docker restart daq-runner
    docker exec daq-runner sh -c "/daq/cmd/exrun $@"
    exit 0
fi

docker image inspect $TARGET > /dev/null

sudo touch $INSTLOCK

echo Starting $TARGET "$@"...
sudo docker run -d --privileged --name daq-runner $docker_args $TARGET $run_cmd $run_extra
pid=$(sudo docker inspect --format '{{.State.Pid}}' daq-runner)
echo Container pid $pid

if [ -n "$move_intfs" ]; then
    if [ -n "$ext_dpid" ]; then
	intfs="$ext_intf $ext_ctrl"
    else
	intfs=$(echo $daq_intf | tr , ' ')
    fi

    for intf in $intfs; do
        move_intf $intf
    done

    echo Done with interface migration.
fi

sudo rm -f $INSTLOCK

sudo docker attach daq-runner
echo Done with run $?
